<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mongo="http://www.springframework.org/schema/data/mongo"
       xsi:schemaLocation="
          http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
          http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
          http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo.xsd">

       <context:property-placeholder location="classpath:resources.properties"/>
       <!-- 自动扫描 -->
       <context:annotation-config/>
       <context:component-scan base-package="cn.lamppa.aether"/>

       <!-- 资源数据源 -->
       <bean id="res_dataSource" class="com.zaxxer.hikari.HikariDataSource"  destroy-method="close">
              <property name="driverClassName" value="${res_database_driver}" />
              <property name="jdbcUrl" value="${res_database.url}"/>
              <property name="username" value="${res_database.username}"/>
              <property name="password" value="${res_database.password}"/>
              <property name="connectionTestQuery" value="${hikaricp.connectionTestQuery}"/>
              <property name="connectionTimeout" value="${hikaricp.connectionTimeout}"/>
              <property name="idleTimeout" value="${hikaricp.idleTimeout}"/>
              <property name="maxLifetime" value="${hikaricp.maxLifetime}"/>
              <property name="maximumPoolSize" value="${hikaricp.maximumPoolSize}"/>
              <property name="minimumIdle" value="${hikaricp.minimumIdle}"/>

       </bean>

       <bean id="res_dataSourceProxy" class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy">
              <property name="targetDataSource" ref="res_dataSource"/>
       </bean>

       <bean id="resJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
              <constructor-arg ref="res_dataSourceProxy"/>
       </bean>

       <!-- 平台数据源 -->
       <bean id="platform_dataSource" class="com.zaxxer.hikari.HikariDataSource"  destroy-method="close">
              <!-- 数据库基本信息配置 -->
              <property name="driverClassName" value="${platform_database_driver}" />
              <property name="jdbcUrl" value="${platform_database.url}"/>
              <property name="username" value="${platform_database.username}"/>
              <property name="password" value="${platform_database.password}"/>
              <property name="connectionTestQuery" value="${hikaricp.connectionTestQuery}"/>
              <property name="connectionTimeout" value="${hikaricp.connectionTimeout}"/>
              <property name="idleTimeout" value="${hikaricp.idleTimeout}"/>
              <property name="maxLifetime" value="${hikaricp.maxLifetime}"/>
              <property name="maximumPoolSize" value="${hikaricp.maximumPoolSize}"/>
              <property name="minimumIdle" value="${hikaricp.minimumIdle}"/>
       </bean>

       <bean id="platform_dataSourceProxy" class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy">
              <property name="targetDataSource" ref="platform_dataSource"/>
       </bean>

       <bean id="platformJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
              <constructor-arg ref="platform_dataSourceProxy"/>
       </bean>

       <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
       <bean id="transactionManager"
             class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
              <property name="dataSource" ref="platform_dataSourceProxy"/>
       </bean>

       <tx:annotation-driven transaction-manager="transactionManager"/>


       <!-- 'mongo' -->
       <mongo:mongo id="mongo" host="${mongo.host}" port="${mongo.port}"/>

       <bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
              <constructor-arg ref="mongo"/>
              <constructor-arg name="databaseName" value="${mongo.dbname}"/>
       </bean>


       <!-- Redis 配置 -->
       <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
              <property name="maxTotal" value="${redis.pool.maxTotal}" />
              <property name="maxIdle" value="${redis.pool.maxIdle}" />
              <property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}" />
              <property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
       </bean>

       <!-- redis单节点数据库连接配置 -->
       <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
              <property name="hostName" value="${redis.ip}" />
              <property name="port" value="${redis.port}" />
              <property name="password" value="${redis.pass}" />
              <property name="poolConfig" ref="jedisPoolConfig" />
       </bean>

       <!-- redisTemplate配置，redisTemplate是对Jedis的对redis操作的扩展，有更多的操作，封装使操作更便捷 -->
       <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
              <property name="connectionFactory" ref="jedisConnectionFactory" />
       </bean>
</beans>